stages:
  - build
  - test:clang-fbsd
  - test:clang
  - test:gcc
  - test:gcc-i386
  - test:clang-macOS

cache:
  paths:
  - apt-cache/

.build-meson: &build-meson
  stage: build
  script:
    - meson setup build
    - ninja -C build
    - meson setup example/build example
    - ninja -C example/build
  artifacts:
    paths:
    - build/libAdsLib.a
    - build/AdsLibTest
    - build/AdsLibTest.exe
    - build/AdsLibOOITest
    - build/AdsLibOOITest.exe
    - example/build/example
    - example/build/example.exe

.build-meson-docker: &build-meson-docker
  <<: *build-meson
  tags:
    - docker
  image: ${REGISTRY_HOST}/beckhoff/docker-mxe:25861

.build-template: &build-template
  stage: build
  tags:
    - docker
  image: ${REGISTRY_HOST}/beckhoff/docker-mxe:8187
  script:
    - $maker CXX=$compiler OS_NAME=$os_name
    - $maker CXX=$compiler OS_NAME=$os_name AdsLibTest.bin
    - $maker CXX=$compiler OS_NAME=$os_name AdsLibOOITest.bin
    - cd example
    - $maker CXX=$compiler OS_NAME=$os_name
  artifacts:
    paths:
    - AdsLib-$os_name.a
    - AdsLibTest.bin
    - AdsLibOOITest.bin
    - example/example.bin

build:clang:
  <<: *build-meson-docker
  variables:
    CXX: clang++

build:clang-fbsd:
  <<: *build-template
  variables:
    compiler: /usr/bin/clang++
    os_name: FreeBSD
    maker: /usr/local/bin/gmake
  tags:
    - fbsd

build:clang-macOS:
  <<: *build-template
  variables:
    compiler: /usr/bin/clang++
    os_name: Darwin
    maker: make
  tags:
    - macOS

build:gcc:
  <<: *build-meson-docker

build:gcc-i386:
  <<: *build-template
  variables:
    compiler: /usr/bin/g++
    os_name: i386
    maker: make
    ci_cxx_flags: -m32

build:mxe:
  <<: *build-template
  variables:
    compiler: /mxe/usr/bin/i686-w64-mingw32.static.posix-g++
    os_name: win32
    maker: make

build:win10:
  <<: *build-meson
  tags:
    - MD_TWINCAT_XAE
  before_script:
    - C:\ProgramData\chocolatey\bin\choco install --no-progress -y meson ninja
    - $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")


.test-linux: &test-linux
  image: debian:buster-slim
  tags:
    - docker
    - host_network
    - lbs1
    - rack
  before_script:
    - dpkg --add-architecture i386
    - apt-get -o dir::cache::archives="apt-cache" update
    - apt-get -o dir::cache::archives="apt-cache" install -y libc6:i386 libstdc++6:i386 ncat
  script:
    - ./tools/90_run_tests.sh

test:clang:
  <<: *test-linux
  stage: test:clang
  dependencies:
    - build:clang

test:gcc:
  <<: *test-linux
  stage: test:gcc
  dependencies:
    - build:gcc

test:gcc-i386:
  <<: *test-linux
  stage: test:gcc-i386
  dependencies:
    - build:gcc-i386

test:clang-fbsd:
  stage: test:clang-fbsd
  dependencies:
    - build:clang-fbsd
  tags:
    - fbsd
    - rack
  script:
    - ./tools/90_run_tests.sh

test:clang-macOS:
  stage: test:clang-macOS
  dependencies:
    - build:clang-macOS
  tags:
    - macOS
    - rack
  script:
    - ./tools/90_run_tests.sh
