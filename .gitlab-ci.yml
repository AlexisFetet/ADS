stages:
  - build
  - test
  - test-macos-clang

cache:
  paths:
  - apt-cache/

.build-meson: &build-meson
  stage: build
  script:
    - meson setup build ${BHF_CI_MESON_OPTIONS}
    - ninja -C build
    - meson setup example/build example ${BHF_CI_MESON_OPTIONS}
    - ninja -C example/build
  artifacts:
    paths:
    - build/libAdsLib.a
    - build/libTcAdsLib.a
    - build/AdsLibTest
    - build/AdsLibTest.exe
    - build/AdsLibOOITest
    - build/AdsLibOOITest.exe
    - example/build/example
    - example/build/example.exe
    - example/build/tcexample
    - example/build/tcexample.exe

.build-meson-docker: &build-meson-docker
  <<: *build-meson
  tags:
    - docker
  image: ${REGISTRY_HOST}/beckhoff/docker-mxe:25861

build-linux-clang:
  <<: *build-meson-docker
  variables:
    CXX: clang++

build-fbsd-clang:
  <<: *build-meson
  tags:
    - freebsd13_4_build_vm
  before_script:
    - doas pkg install -y meson
    - curl https://tcbsd.beckhoff.com/\?dir\=TCBSD/12/stable/packages/All | grep -o 'href=".*ADS-Comm-Lib.*"' | head -1 | sed -e 's/"//g' -e 's|href=|https://tcbsd.beckhoff.com/|g' | xargs fetch
    - doas pkg install -y -f TF6000-ADS-Comm-Lib-*
  variables:
    BHF_CI_MESON_OPTIONS: '-Dtcadsdll_include=/usr/local/include -Dtcadsdll_lib=/usr/local/lib'

build-macos-clang:
  <<: *build-meson
  tags:
    - macOS
  variables:
    BHF_CI_MESON_OPTIONS: '-Dcpp_std=c++11'

build-linux-gcc:
  <<: *build-meson-docker

build-linux-gcc-i386:
  <<: *build-meson-docker
  variables:
    BHF_CI_MESON_OPTIONS: '--cross-file meson.cross.amd64-linux.i386'

build:mxe:
  <<: *build-meson-docker
  variables:
    BHF_CI_MESON_OPTIONS: '--cross-file meson.cross.amd64-linux.win32 -Dcpp_std=c++11'

build:win10:
  <<: *build-meson
  tags:
    - MD_TWINCAT_XAE
  before_script:
    - C:\ProgramData\chocolatey\bin\choco install --no-progress -y meson ninja
    - $env:Path = [System.Environment]::GetEnvironmentVariable("Path","Machine") + ";" + [System.Environment]::GetEnvironmentVariable("Path","User")
    - $env:BHF_CI_MESON_OPTIONS = '-Dtcadsdll_include=c:\TwinCAT\AdsApi\TcAdsDll\Include', '-Dtcadsdll_lib=c:\TwinCAT\AdsApi\TcAdsDll\x64\lib'

.test-linux: &test-linux
  stage: test
  image: ${REGISTRY_HOST}/beckhoff/test_stage/test_runner:3.1
  tags:
    - docker_vm_runner
    - few_vcpus
  services:
    - name: ${REGISTRY_HOST}/beckhoff/build-linuxum:patrickbr-docker-adslib
      alias: ads-server
  before_script:
    - dpkg --add-architecture i386
    - apt update -y && apt install -y ${BHF_CI_APT_EXTRA} ncat
  script:
    - ./tools/80_ads_route.sh
    - ./tools/90_run_tests.sh

test-linux-clang:
  <<: *test-linux
  needs: [
    "build-linux-clang",
  ]

test-linux-gcc:
  <<: *test-linux
  needs: [
    "build-linux-gcc",
  ]

test-linux-gcc-i386:
  <<: *test-linux
  needs: [
    "build-linux-gcc-i386",
  ]
  variables:
    BHF_CI_APT_EXTRA: 'libc6:i386 libstdc++6:i386'

test-fbsd-clang:
  stage: test
  needs: [
    "build-fbsd-clang",
  ]
  tags:
    - fbsd
    - rack
  script:
    - ./tools/90_run_tests.sh

test-macos-clang:
  stage: test-macos-clang
  dependencies:
    - build-macos-clang
  tags:
    - macOS
    - rack
  script:
    - ./tools/90_run_tests.sh
